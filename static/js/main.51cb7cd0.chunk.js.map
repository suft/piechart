{"version":3,"sources":["components/SliderTrack.tsx","components/SliderThumb.tsx","components/Slider.tsx","components/Pie.tsx","App.tsx","index.tsx"],"names":["SliderTrack","color","props","children","div","display","w","maxWidth","h","borderRadius","bg","SliderThumb","value","isDragged","alignItems","justifyContent","boxShadow","borderWidth","borderColor","position","top","p","fontWeight","Slider","id","title","handleChange","useState","values","setValues","useEffect","flexDirection","mt","mb","ml","mr","onChange","onFinalChange","renderTrack","renderThumb","Pie","data","handleSlider","gap","lineWidth","map","item","splitAmount","amount","n","parts","i","push","zp","pp","Math","floor","App","initialCategories","splits","length","index","categories","setCategories","others","prev","pop","theme","defaultTheme","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.51cb7cd0.chunk.js","sourcesContent":["import { x } from '@xstyled/styled-components'\nimport { ITrackProps } from 'react-range/lib/types'\n\ntype SliderTrackProps = {\n  props: ITrackProps\n  children: React.ReactNode\n}\n\nconst SliderTrack =\n  (color: string) =>\n  ({ props, children }: SliderTrackProps): JSX.Element => {\n    return (\n      <x.div\n        {...props}\n        display=\"flex\"\n        w=\"sm\"\n        maxWidth={0.8}\n        h={2}\n        borderRadius=\"full\"\n        bg={color}\n      >\n        {children}\n      </x.div>\n    )\n  }\n\nexport default SliderTrack\n","import { x } from '@xstyled/styled-components'\nimport { IThumbProps } from 'react-range/lib/types'\n\ntype SliderThumbProps = {\n  props: IThumbProps\n  isDragged: boolean\n}\n\nconst SliderThumb =\n  (value: number) =>\n  ({ props, isDragged }: SliderThumbProps): JSX.Element => {\n    return (\n      <x.div\n        {...props}\n        display=\"flex\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n        w={6}\n        h={6}\n        boxShadow=\"lg\"\n        borderWidth\n        borderRadius\n        borderColor=\"gray-600\"\n        bg=\"white\"\n      >\n        <x.div\n          position=\"absolute\"\n          top={-25}\n          p={0.5}\n          color=\"white\"\n          bg=\"gray-400\"\n          fontWeight=\"bold\"\n          borderRadius\n        >\n          {value}\n        </x.div>\n        <x.div w={2} h={4} bg={isDragged ? 'blue-200' : 'gray-200'}></x.div>\n      </x.div>\n    )\n  }\n\nexport default SliderThumb\n","import { useState, useEffect } from 'react'\nimport { x } from '@xstyled/styled-components'\nimport { Range } from 'react-range'\nimport SliderTrack from './SliderTrack'\nimport SliderThumb from './SliderThumb'\n\ntype SliderProps = {\n  id: number\n  value: number\n  title: string\n  color: string\n  handleChange: (id: number, value: number) => void\n}\n\nconst Slider = ({\n  id,\n  value,\n  title,\n  color,\n  handleChange,\n}: SliderProps): JSX.Element => {\n  const [values, setValues] = useState<number[]>([value])\n  useEffect(() => {\n    setValues([value])\n  }, [value])\n\n  return (\n    <x.div\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"space-between\"\n      mt={10}\n      mb={4}\n      ml={4}\n      mr={4}\n      h={10}\n    >\n      <Range\n        values={values}\n        onChange={(values) => setValues(values)}\n        onFinalChange={(values) => handleChange(id, values[0])}\n        renderTrack={SliderTrack(color)}\n        renderThumb={SliderThumb(values[0])}\n      />\n      <x.p fontWeight=\"bold\">{title}</x.p>\n    </x.div>\n  )\n}\n\nexport default Slider\n","import { x } from '@xstyled/styled-components'\nimport { PieChart as Chart } from 'react-minimal-pie-chart'\nimport Slider from './Slider'\n\ntype Category = {\n  id: number\n  title: string\n  color: string\n  value: number\n}\n\ntype PieProps = {\n  data: Category[]\n  handleSlider: (id: number, value: number) => void\n}\n\nconst Pie = ({ data, handleSlider }: PieProps): JSX.Element => {\n  return (\n    <x.div>\n      <x.div display=\"flex\" alignItems=\"center\" justifyContent=\"center\" gap={4}>\n        <x.div w={96} maxWidth={0.75}>\n          <Chart data={data} lineWidth={60} />\n        </x.div>\n      </x.div>\n      {data.map((item) => (\n        <Slider\n          key={item.id}\n          id={item.id}\n          value={item.value}\n          title={item.title}\n          color={item.color}\n          handleChange={handleSlider}\n        />\n      ))}\n    </x.div>\n  )\n}\n\nexport default Pie\n","import { useState } from 'react'\nimport { x } from '@xstyled/styled-components'\nimport Pie from './components/Pie'\n\nconst splitAmount = (amount: number, n: number): number[] => {\n  const parts = []\n  if (amount % n === 0) {\n    const p = amount / n\n    for (let i = 0; i < n; ++i) {\n      parts.push(p)\n    }\n  } else {\n    const zp = n - (amount % n)\n    const pp = Math.floor(amount / n)\n    for (let i = 0; i < n; ++i) {\n      if (i >= zp) parts.push(pp + 1)\n      else parts.push(pp)\n    }\n  }\n  return parts\n}\n\nfunction App(): JSX.Element {\n  const [categories, setCategories] = useState(() => {\n    const initialCategories = [\n      {\n        title: 'Category A',\n        color: '#94a3b8',\n      },\n      {\n        title: 'Category B',\n        color: '#fb923c',\n      },\n      {\n        title: 'Category C',\n        color: '#4ade80',\n      },\n      {\n        title: 'Category D',\n        color: '#a78bfa',\n      },\n    ]\n    const splits = splitAmount(100, initialCategories.length)\n\n    return initialCategories.map((item, index) => ({\n      ...item,\n      id: index,\n      value: splits[index],\n    }))\n  })\n\n  const handleCategories = (id: number, value: number): void => {\n    const others = splitAmount(100 - value, categories.length - 1)\n    setCategories((prev) => {\n      return prev.map((item) => ({\n        ...item,\n        value: item.id === id ? value : others.pop() || 0,\n      }))\n    })\n  }\n\n  return (\n    <x.div\n      w=\"100vw\"\n      h=\"100vh\"\n      display=\"flex\"\n      flexDirection=\"column\"\n      alignItems=\"center\"\n      justifyContent=\"flex-start\"\n      mt={5}\n    >\n      <Pie data={categories} handleSlider={handleCategories} />\n    </x.div>\n  )\n}\n\nexport default App\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {\n  defaultTheme,\n  ThemeProvider,\n  Preflight,\n} from '@xstyled/styled-components'\n\nconst theme = {\n  ...defaultTheme,\n}\n\nReactDOM.render(\n  <StrictMode>\n    <ThemeProvider theme={theme}>\n      <Preflight />\n      <App />\n    </ThemeProvider>\n  </StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}